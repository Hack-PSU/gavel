FROM python:3.9-slim

# Install PostgreSQL and dependencies
RUN apt-get update && apt-get install -y \
    postgresql \
    postgresql-contrib \
    gcc \
    python3-dev \
    libpq-dev \
    supervisor \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt gunicorn

# Copy application code
COPY . .

# Create PostgreSQL data directory
RUN mkdir -p /var/lib/postgresql/data && \
    chown -R postgres:postgres /var/lib/postgresql

# Set defaults and internal config
ENV PYTHONUNBUFFERED=1 \
    FLASK_APP=gavel \
    PORT=5000 \
    DATABASE_URL=postgresql://gavel:gavel_prod_pass@localhost:5432/gavel \
    DB_URI=postgresql://gavel:gavel_prod_pass@localhost:5432/gavel \
    # Auth defaults
    AUTH_ENVIRONMENT=production \
    MIN_JUDGE_ROLE=2 \
    MIN_ADMIN_ROLE=3 \
    AUTH_SERVER_URL=https://auth.hackpsu.org/api/sessionUser \
    AUTH_LOGIN_URL=https://auth.hackpsu.org/login \
    AUTH_LOGOUT_URL=https://auth.hackpsu.org/api/sessionLogout \
    GAVEL_URL=https://gavel.hackpsu.org \
    HACKPSU_API_URL=https://apiv3.hackpsu.org/judging/projects \
    # App defaults
    DEBUG=false \
    DISABLE_EMAIL=true \
    EMAIL_FROM=noreply@hackpsu.org \
    EMAIL_USER=unused \
    EMAIL_PASSWORD=unused \
    PROXY=true \
    SEND_STATS=false \
    MIN_VIEWS=2 \
    TIMEOUT=1.0 \
    IGNORE_CONFIG_FILE=true \
    ENABLE_PROJECT_SYNC=true \
    PROJECT_SYNC_INTERVAL=60
# Required runtime env vars:
# - SECRET_KEY

# Create supervisor config
RUN echo '[supervisord]\n\
nodaemon=true\n\
user=root\n\
\n\
[program:postgresql]\n\
user=postgres\n\
command=/usr/lib/postgresql/*/bin/postgres -D /var/lib/postgresql/data\n\
autostart=true\n\
autorestart=true\n\
stdout_logfile=/dev/stdout\n\
stdout_logfile_maxbytes=0\n\
stderr_logfile=/dev/stderr\n\
stderr_logfile_maxbytes=0\n\
\n\
[program:gavel]\n\
command=gunicorn -b 0.0.0.0:5000 --worker-class gevent gavel:app\n\
autostart=true\n\
autorestart=true\n\
stdout_logfile=/dev/stdout\n\
stdout_logfile_maxbytes=0\n\
stderr_logfile=/dev/stderr\n\
stderr_logfile_maxbytes=0' > /etc/supervisor/conf.d/supervisord.conf

# Copy startup script
COPY start.sh /app/start.sh
RUN chmod +x /app/start.sh

# Expose port
EXPOSE 5000

# Volume for PostgreSQL data persistence
VOLUME ["/var/lib/postgresql/data"]

# Start script
CMD ["/app/start.sh"]
